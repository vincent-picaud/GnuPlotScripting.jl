var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [GnuPlotScripting]","category":"page"},{"location":"api/#GnuPlotScripting.GnuPlotScript","page":"API","title":"GnuPlotScripting.GnuPlotScript","text":"gp = GnuPlotScript(;direct_plot = true)\n\nCreate a gnuplot script gp. If direct_plot is true, simultaneously plot the registered operations.\n\nUsage example\n\nYou can perform a simple plot as follows:\n\ngp = GnuPlotScript(;direct_plot = true)\n\nX=[-pi:0.1:pi;];\nYs = sin.(X);\nYc = cos.(X);\n\nid = register_data(gp,hcat(X,Ys,Yc))\nfree_form(gp,\"replot '$id' u 1:3 w l t 'cos'\")\nfree_form(gp,\"replot '$id' u 1:2 w l t 'sin'\")\n\nThe plot will be created immediately.\n\nAlso see\n\nregister_data \nfree_form \n\n\n\n\n\n","category":"type"},{"location":"api/#GnuPlotScripting.add_vertical_line-Tuple{GnuPlotScript, Float64}","page":"API","title":"GnuPlotScripting.add_vertical_line","text":"add_vertical_line(gp::GnuPlotScript,position::Float64;name::Union{AbstractString,Nothing})\n\nAdd a vertical bar with a label\n\n\n\n\n\n","category":"method"},{"location":"api/#GnuPlotScripting.export_png-Tuple{GnuPlotScript, AbstractString}","page":"API","title":"GnuPlotScripting.export_png","text":"export_png(gp::GnuPlotScript,\n           filename::AbstractString;\n           enhanced::Bool)\n\nExport the current plots as an PNG image\n\n\n\n\n\n","category":"method"},{"location":"api/#GnuPlotScripting.free_form-Tuple{GnuPlotScript, AbstractString}","page":"API","title":"GnuPlotScripting.free_form","text":"free_form(gp::GnuPlotScript,gp_line::AbstractString)\n\nWrite gnuplot commands. This command line is directly forwarded to Gnuplot. The only difference is that you can use replot even for the first plot. This is convenient when you chain plots, you do not have to worry if the current command is the first plot.\n\nUsage example\n\nusing GnuPlotScripting\n\ngp = GnuPlotScript()\n\nfree_form(gp, \"replot sin(x) lw 2 t 'a trigonometric function'\")\n\n\n\n\n\n","category":"method"},{"location":"api/#GnuPlotScripting.register_data-Tuple{GnuPlotScript, AbstractVecOrMat}","page":"API","title":"GnuPlotScripting.register_data","text":"register_data(gp::GnuPlotScript,\n              data::AbstractVecOrMat;\n              copy_data::Bool=true) -> id\n\nRegister data and return the associated data identifier. Registered data is embedded in the plot script file. The returned id is used to reference registered data.\n\nUsage example\n\ngp = GnuPlotScript()\n\nM = rand(10,3)\n\nid = register_data(gp, M)\n\nfree_form(gp,\"replot $id u 1:2\")\nfree_form(gp,\"replot $id u 1:3\")\n\n\n\n\n\n","category":"method"},{"location":"api/#GnuPlotScripting.set_title-Tuple{GnuPlotScript, AbstractString}","page":"API","title":"GnuPlotScripting.set_title","text":"set_title(gp::GnuPlotScript,title::AbstractString;\n                   enhanced::Bool = false)\n\nDefine plot title. If enhanced is true, some characters are processed in a special way. By example _ subscripts text.\n\n\n\n\n\n","category":"method"},{"location":"api/#GnuPlotScripting.write_script-Tuple{AbstractString, GnuPlotScript}","page":"API","title":"GnuPlotScripting.write_script","text":"write_script(script_file::AbstractString,gp::GnuPlotScript)\n\nWrite script with embedded data for future use.\n\nUsage\n\ngp = GnuPlotScript()\n\n...\n\nwrite_script(\"gnuplot_script.gp\",gp)\n\nYou can replay the script using Gnuplot:\n\n    gnuplot gnuplot_script.gp\n\nIf you want to keep the gnuplot session opened, add a final -\n\n    gnuplot gnuplot_script.gp -\n\n\n\n\n\n","category":"method"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"CurrentModule = GnuPlotScripting","category":"page"},{"location":"beside_free_form/#beside_free_form","page":"Beside free_form()","title":"Beside free_form()","text":"","category":"section"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"Some task are recurrent and need to be easily performed. This is the role of these extra functions. I will extend this in the future. If you are interested, any contribution is open and welcome :)","category":"page"},{"location":"beside_free_form/#Set-plot-title","page":"Beside free_form()","title":"Set plot title","text":"","category":"section"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"A very basic example","category":"page"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"set_title(gp,\"My_plot_title\",enhanced=false)","category":"page"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"is equivalent to ","category":"page"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"free_form(gp, \"set title \\\"My_plot_title\\\" noenhanced\")","category":"page"},{"location":"beside_free_form/#Plotting-vertical-bars","page":"Beside free_form()","title":"Plotting vertical bars","text":"","category":"section"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"An easy way to plot vertical bars:","category":"page"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"using GnuPlotScripting\n\ngp = GnuPlotScript()\n\nadd_vertical_line(gp,-5.0,name=\"left\")\nadd_vertical_line(gp,+5.0,name=\"right\")\n\nfree_form(gp,\"plot exp(-x*x/25) with line t 'Gaussian'\")\n\nexport_png(gp, \"vlines.png\")","category":"page"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"(Image: vlines)","category":"page"},{"location":"beside_free_form/","page":"Beside free_form()","title":"Beside free_form()","text":"See add_vertical_line.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = GnuPlotScripting","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"#Motivation","page":"Home","title":"Motivation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Despite the existence of other gnuplot wrappings in Julia:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Gnuplot.jl\nGaston.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"I developed this extremely small package for my own usage.","category":"page"},{"location":"","page":"Home","title":"Home","text":"I needed a simple solution to:","category":"page"},{"location":"","page":"Home","title":"Home","text":"navigate/zoom across large 1D signals,\ncreate and write gnuplot scripts with embedded data.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here is what I wrote, this is really rudimentary but it does what I needed. By example I use it to plot nonlinear fittings in spectrometry:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: demo)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package has no support for Pluto/Jupyter integration, and may never have. Feel free to use it as it is...","category":"page"},{"location":"#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you already know gnuplot.info, the good news is that you only have few new stuff to learn: simply use free_form() to pass gnuplot commands.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here are some basic functionalities with an example ","category":"page"},{"location":"","page":"Home","title":"Home","text":"to perform direct rendering of Gnuplot plots from Julia\nto create and save Gnuplot scripts with embedded data\nto easily export Gnuplot figures","category":"page"},{"location":"","page":"Home","title":"Home","text":"using GnuPlotScripting\n\n# create a gnuplot script\n#\ngp = GnuPlotScript()\n\n# Fake data\n#\nX=[-pi:0.1:pi;];\nYs =sin.(X);\nYc =cos.(X);\n\n# embed data into the script\n#\nid=register_data(gp,hcat(X,Ys,Yc))\n\n# usual gnuplot command\n#\nfree_form(gp,\"replot '$id' u 1:3 w l t 'cos'\")\nfree_form(gp,\"replot '$id' u 1:2 w l t 'sin'\")\n\n# png export of the fig\n#\nexport_png(\"fig.png\",gp)\n\n# write gnuplot script\n#\nwrite_script(\"gnuplot_script.gp\",gp)","category":"page"},{"location":"","page":"Home","title":"Home","text":"That's it! ","category":"page"},{"location":"","page":"Home","title":"Home","text":"After running the previous code you will get a nearly immediate plot of your figure, a fig.png image file","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: script_1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"and a gnuplot script gnuplot_script.gp with embedded data you can rerun when you want.","category":"page"},{"location":"#Content","page":"Home","title":"Content","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"New things you have to know are summarized below.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"new_things_to_learn.md\",\n\t\"beside_free_form.md\",\n]\nDepth = 3","category":"page"},{"location":"","page":"Home","title":"Home","text":"The API is defined below:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"api.md\",\n]\nDepth = 3","category":"page"},{"location":"#Extra-references","page":"Home","title":"Extra references","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Some gnuplot extra references:","category":"page"},{"location":"","page":"Home","title":"Home","text":"GnuPlot official page\nGnuPlot in Action a very well written book \nwww.gnuplotting.org a lot of great examples\nGnuPlot not so Frequently Asked Questions \nWikipedia free encyclopedia...","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"CurrentModule = GnuPlotScripting","category":"page"},{"location":"new_things_to_learn/#New-things-to-learn","page":"New things to learn","title":"New things to learn","text":"","category":"section"},{"location":"new_things_to_learn/#GnuPlotScript()-constructor","page":"New things to learn","title":"GnuPlotScript() constructor","text":"","category":"section"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"By default GnuPlotScript opens a pipe and allows plots to be immediately rendered in a gnuplot window.","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"If you do not want to render plot, use","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"gp = GnuPlotScript(direct_plot=false)","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"CAVEAT: if direct_plot=false you will have to run the gnuplot script afterward to generate the exported figure files.","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Note: you can work with several scripts in the same time:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"gp_1 = GnuPlotScript()\ngp_2 = GnuPlotScript()\n\nfree_form(gp_1,\"plot sin(x)\")\nfree_form(gp_2,\"plot cos(x)\")","category":"page"},{"location":"new_things_to_learn/#free_form","page":"New things to learn","title":"The free_form() function","text":"","category":"section"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"This is the most important function and it simply forwards a string to gnuplot.","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"You have direct access to all gnuplot functionalities and there is very little work for me to do that! :)","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Please note one difference. Contrary to gnuplot you can use replot even for the first plot. The advantage is that you can chain plots without worrying about the first plot. To erase old plots and start a new one you can still use plot, as usual.","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Example:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"gp = GnuPlotScript()\n\nfree_form(gp,\"replot sin(x) t 'first plot'\")\nfree_form(gp,\"replot sin(2*x) t 'second plot'\")\n\nfree_form(gp,\"plot cos(x) t 'new plot'\")","category":"page"},{"location":"new_things_to_learn/#Data-embedding","page":"New things to learn","title":"Data embedding","text":"","category":"section"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Before use, data (vector or matrix) need to be registered:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"id_1 = register_data(gp,my_vector)\nid_2 = register_data(gp,my_matrix)","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"You will get an identifier id. This identifier can be then used in plot functions. By example:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"using GnuPlotScripting\n\nX = -2:0.1:2\nY = -2:0.1:2\nM = [exp(-x_i*x_i-y_j*y_j) for x_i=X, y_j=Y]\n\ngp = GnuPlotScript()\n\nid = register_data(gp, M)\n\nfree_form(gp,\"set autoscale fix\")\nfree_form(gp,\"plot '$id' matrix using 1:2:3 with image\")","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"(Image: 2D)","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Note: hopefully, data is saved only once, even if reused several times.","category":"page"},{"location":"new_things_to_learn/#Exporting-figures","page":"New things to learn","title":"Exporting figures","text":"","category":"section"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"You can export figures as follows:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"export_png(gp, \"my_fig.png\")","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"The figures are directly exported if gp was initialized with direct_plot=true (which is the default option). If not you will have to save and run the gnuplot script afterward.","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Currently supported formats are:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"export_png","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"I will add more in the future... eps or pdf first I guess.","category":"page"},{"location":"new_things_to_learn/#saving_scripts","page":"New things to learn","title":"Saving gnuplot scripts","text":"","category":"section"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"At any time you can export the gnuplot script as follows:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"write_script(\"script.gp\",gp)","category":"page"},{"location":"new_things_to_learn/#running_scripts","page":"New things to learn","title":"Running gnuplot scripts","text":"","category":"section"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"To “replay” the saved script, simply launch gnuplot from a shell terminal:","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"gnuplot script.gp ","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"To prevent gnuplot from closing immediately after the script is ended, you can add a final - to the gnuplot command.","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"gnuplot script.gp -","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"Note: you can also do that from Julia","category":"page"},{"location":"new_things_to_learn/","page":"New things to learn","title":"New things to learn","text":"run(Cmd([\"gnuplot\",\"script.gp\"]))","category":"page"}]
}
